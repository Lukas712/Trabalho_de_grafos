<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classLinked__Vertex" xml:lang="pt">
<title>Referência à classe Linked_Vertex</title>
<indexterm><primary>Linked_Vertex</primary></indexterm>
Diagrama de heranças da classe Linked_Vertex<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classLinked__Vertex__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Diagrama de colaboração para Linked_Vertex:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classLinked__Vertex__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Membros públicos    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classLinked__Vertex_1a3b96387561adc599c1cd0df64b05952b">Linked_Vertex</link> ()</para>
</listitem>
            <listitem><para><link linkend="_classLinked__Vertex_1a79679b3c8dedd7329ae8d4a5d6da0027">~Linked_Vertex</link> ()</para>
</listitem>
            <listitem><para>bool <link linkend="_classLinked__Vertex_1a5085c4f1957f9a0fe1adb40104134333">getArestaPonderada</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_classLinked__Vertex_1a5f3bdf2af571dfe1f456138c2a630a83">setArestaPonderada</link> (bool val)</para>
</listitem>
            <listitem><para>bool <link linkend="_classLinked__Vertex_1a9d5e6d6ed85c555df09515fecd901f97">getVerticePonderado</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_classLinked__Vertex_1aab0dea1ef7c1c5b93bc0f615fc6e72af">setVerticePonderado</link> (bool val)</para>
</listitem>
            <listitem><para>void <link linkend="_classLinked__Vertex_1a6943b907782fcd7189db4a633a111c62">insereAresta</link> (int origem, int destino, int val)</para>
</listitem>
        </itemizedlist>
</simplesect>
Membros públicos herdados de <link linkend="_classLinked__list">Linked_list&lt; NodeVertex &gt;</link>        <itemizedlist>
            <listitem><para>int <link linkend="_classLinked__list_1ad1c20c58f90e54eee52279878ba420b5">getTam</link> ()</para>
</listitem>
            <listitem><para><link linkend="_classNodeVertex">NodeVertex</link> * <link linkend="_classLinked__list_1af1d4f5ed4b06c8ba3898159a11c0762a">getNodeById</link> (int val)</para>
</listitem>
            <listitem><para><link linkend="_classNodeVertex">NodeVertex</link> * <link linkend="_classLinked__list_1a67853c0cb82aad5bfba932bae6eb8402">getUltimo</link> ()</para>
</listitem>
            <listitem><para><link linkend="_classNodeVertex">NodeVertex</link> * <link linkend="_classLinked__list_1a18591733d99a3ca6aeaf4357abf00f44">getPrimeiro</link> ()</para>
</listitem>
            <listitem><para><link linkend="_classLinked__list_1a54be58d941e1da475472a5c5e5dc7786">Linked_list</link> ()</para>
</listitem>
            <listitem><para><link linkend="_classLinked__list_1a8a866f60000c39425020b3f102baad92">~Linked_list</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_classLinked__list_1ad68dcfd7efeba688a38415bef82bb184">insereFinal</link> (int val)</para>
</listitem>
            <listitem><para>void <link linkend="_classLinked__list_1a32d114d58039a83d38209dbfe86abcc1">imprimeLista</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_classLinked__list_1a42b8ab1db5a517935a7001af37fe130f">removeNode</link> (int val)</para>
</listitem>
        </itemizedlist>
<simplesect>
    <title>Outros membros herdados    </title>
Membros protegidos herdados de <link linkend="_classLinked__list">Linked_list&lt; NodeVertex &gt;</link>        <itemizedlist>
            <listitem><para>void <link linkend="_classLinked__list_1a17e3103bf8064e6622004dec62b8ea0a">limpaNodes</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
Atributos Protegidos herdados de <link linkend="_classLinked__list">Linked_list&lt; NodeVertex &gt;</link>        <itemizedlist>
            <listitem><para><link linkend="_classNodeVertex">NodeVertex</link> * <emphasis role="strong">primeiro</emphasis></para>
</listitem>
            <listitem><para><link linkend="_classNodeVertex">NodeVertex</link> * <emphasis role="strong">ultimo</emphasis></para>
</listitem>
        </itemizedlist>
<section>
<title>Documentação dos Construtores &amp; Destrutor</title>
<anchor xml:id="_classLinked__Vertex_1a3b96387561adc599c1cd0df64b05952b"/><section>
    <title>Linked_Vertex()</title>
<indexterm><primary>Linked_Vertex</primary><secondary>Linked_Vertex</secondary></indexterm>
<indexterm><primary>Linked_Vertex</primary><secondary>Linked_Vertex</secondary></indexterm>
<para><computeroutput>Linked_Vertex::Linked_Vertex ( )<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>Construtor da classe Lista encadeada para os vértices </para>
</section>
<anchor xml:id="_classLinked__Vertex_1a79679b3c8dedd7329ae8d4a5d6da0027"/><section>
    <title>~Linked_Vertex()</title>
<indexterm><primary>~Linked_Vertex</primary><secondary>Linked_Vertex</secondary></indexterm>
<indexterm><primary>Linked_Vertex</primary><secondary>~Linked_Vertex</secondary></indexterm>
<para><computeroutput>Linked_Vertex::~Linked_Vertex ( )<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>Destrutor da classe lista encadeada para os vértices </para>
</section>
</section>
<section>
<title>Documentação das funções</title>
<anchor xml:id="_classLinked__Vertex_1a5085c4f1957f9a0fe1adb40104134333"/><section>
    <title>getArestaPonderada()</title>
<indexterm><primary>getArestaPonderada</primary><secondary>Linked_Vertex</secondary></indexterm>
<indexterm><primary>Linked_Vertex</primary><secondary>getArestaPonderada</secondary></indexterm>
<para><computeroutput>bool Linked_Vertex::getArestaPonderada ( )<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>Retorna se as arestas são ponderadas ou não </para>
</section>
<anchor xml:id="_classLinked__Vertex_1a9d5e6d6ed85c555df09515fecd901f97"/><section>
    <title>getVerticePonderado()</title>
<indexterm><primary>getVerticePonderado</primary><secondary>Linked_Vertex</secondary></indexterm>
<indexterm><primary>Linked_Vertex</primary><secondary>getVerticePonderado</secondary></indexterm>
<para><computeroutput>bool Linked_Vertex::getVerticePonderado ( )<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>Retorna se os vértices são ponderados ou não </para>
</section>
<anchor xml:id="_classLinked__Vertex_1a6943b907782fcd7189db4a633a111c62"/><section>
    <title>insereAresta()</title>
<indexterm><primary>insereAresta</primary><secondary>Linked_Vertex</secondary></indexterm>
<indexterm><primary>Linked_Vertex</primary><secondary>insereAresta</secondary></indexterm>
<para><computeroutput>void Linked_Vertex::insereAresta (int origem, int destino, int val)<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>Insere uma aresta entre dois vértices dentro da lista de vértices do vértice de origem </para>
</section>
<anchor xml:id="_classLinked__Vertex_1a5f3bdf2af571dfe1f456138c2a630a83"/><section>
    <title>setArestaPonderada()</title>
<indexterm><primary>setArestaPonderada</primary><secondary>Linked_Vertex</secondary></indexterm>
<indexterm><primary>Linked_Vertex</primary><secondary>setArestaPonderada</secondary></indexterm>
<para><computeroutput>void Linked_Vertex::setArestaPonderada (bool val)<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>Define se as arestas são ponderadas ou não </para>
</section>
<anchor xml:id="_classLinked__Vertex_1aab0dea1ef7c1c5b93bc0f615fc6e72af"/><section>
    <title>setVerticePonderado()</title>
<indexterm><primary>setVerticePonderado</primary><secondary>Linked_Vertex</secondary></indexterm>
<indexterm><primary>Linked_Vertex</primary><secondary>setVerticePonderado</secondary></indexterm>
<para><computeroutput>void Linked_Vertex::setVerticePonderado (bool val)<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>Define se os vértices são ponderados ou não </para>
</section>
<para>
A documentação para esta classe foi gerada a partir do seguinte ficheiro:</para>
Linked_Vertex.h</section>
</section>
