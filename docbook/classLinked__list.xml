<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classLinked__list" xml:lang="pt">
<title>Referência à classe Template Linked_list&lt; NodeType &gt;</title>
<indexterm><primary>Linked_list&lt; NodeType &gt;</primary></indexterm>
<para>
<computeroutput>#include &lt;Linked_list.hpp&gt;</computeroutput>
</para>
<simplesect>
    <title>Membros públicos    </title>
        <itemizedlist>
            <listitem><para>int <link linkend="_classLinked__list_1ad1c20c58f90e54eee52279878ba420b5">getTam</link> ()</para>
</listitem>
            <listitem><para>NodeType * <link linkend="_classLinked__list_1af1d4f5ed4b06c8ba3898159a11c0762a">getNodeById</link> (int val)</para>
</listitem>
            <listitem><para>NodeType * <link linkend="_classLinked__list_1a67853c0cb82aad5bfba932bae6eb8402">getUltimo</link> ()</para>
</listitem>
            <listitem><para>NodeType * <link linkend="_classLinked__list_1a18591733d99a3ca6aeaf4357abf00f44">getPrimeiro</link> ()</para>
</listitem>
            <listitem><para><link linkend="_classLinked__list_1a54be58d941e1da475472a5c5e5dc7786">Linked_list</link> ()</para>
</listitem>
            <listitem><para><link linkend="_classLinked__list_1a8a866f60000c39425020b3f102baad92">~Linked_list</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_classLinked__list_1ad68dcfd7efeba688a38415bef82bb184">insereFinal</link> (int val)</para>
</listitem>
            <listitem><para>void <link linkend="_classLinked__list_1a32d114d58039a83d38209dbfe86abcc1">imprimeLista</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_classLinked__list_1a42b8ab1db5a517935a7001af37fe130f">removeNode</link> (int val)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Membros protegidos    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="_classLinked__list_1a17e3103bf8064e6622004dec62b8ea0a">limpaNodes</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Atributos Protegidos    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_classLinked__list_1ab2273245078b15b1383764cf4c3cdc8f"/>NodeType * <emphasis role="strong">primeiro</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classLinked__list_1ad7b7592b17f680d3f758bea972a36cfe"/>NodeType * <emphasis role="strong">ultimo</emphasis></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Descrição detalhada</title>
<simplesect><title>template&lt;typename NodeType&gt;<?linebreak?>class Linked_list&lt; NodeType &gt;</title></simplesect>

<para>Classe template para criação do grafo por lista encadeada </para>
</section>
<section>
<title>Documentação dos Construtores &amp; Destrutor</title>
<anchor xml:id="_classLinked__list_1a54be58d941e1da475472a5c5e5dc7786"/><section>
    <title>Linked_list()</title>
<indexterm><primary>Linked_list</primary><secondary>Linked_list&lt; NodeType &gt;</secondary></indexterm>
<indexterm><primary>Linked_list&lt; NodeType &gt;</primary><secondary>Linked_list</secondary></indexterm>
<computeroutput>template&lt;typename NodeType&gt; </computeroutput><para><computeroutput><link linkend="_classLinked__list">Linked_list</link>&lt; NodeType &gt;<link linkend="_classLinked__list">::Linked_list</link> ( )<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>Construtor da Lista Encadeada </para>
</section>
<anchor xml:id="_classLinked__list_1a8a866f60000c39425020b3f102baad92"/><section>
    <title>~Linked_list()</title>
<indexterm><primary>~Linked_list</primary><secondary>Linked_list&lt; NodeType &gt;</secondary></indexterm>
<indexterm><primary>Linked_list&lt; NodeType &gt;</primary><secondary>~Linked_list</secondary></indexterm>
<computeroutput>template&lt;typename NodeType&gt; </computeroutput><para><computeroutput><link linkend="_classLinked__list">Linked_list</link>&lt; NodeType &gt;::~<link linkend="_classLinked__list">Linked_list</link> ( )<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>Destrutor da Lista encadeada </para>
</section>
</section>
<section>
<title>Documentação das funções</title>
<anchor xml:id="_classLinked__list_1af1d4f5ed4b06c8ba3898159a11c0762a"/><section>
    <title>getNodeById()</title>
<indexterm><primary>getNodeById</primary><secondary>Linked_list&lt; NodeType &gt;</secondary></indexterm>
<indexterm><primary>Linked_list&lt; NodeType &gt;</primary><secondary>getNodeById</secondary></indexterm>
<computeroutput>template&lt;typename NodeType&gt; </computeroutput><para><computeroutput>NodeType * <link linkend="_classLinked__list">Linked_list</link>&lt; NodeType &gt;::getNodeById (int val)<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>Retorna o nó correspondente ao id passado </para>
</section>
<anchor xml:id="_classLinked__list_1a18591733d99a3ca6aeaf4357abf00f44"/><section>
    <title>getPrimeiro()</title>
<indexterm><primary>getPrimeiro</primary><secondary>Linked_list&lt; NodeType &gt;</secondary></indexterm>
<indexterm><primary>Linked_list&lt; NodeType &gt;</primary><secondary>getPrimeiro</secondary></indexterm>
<computeroutput>template&lt;typename NodeType&gt; </computeroutput><para><computeroutput>NodeType * <link linkend="_classLinked__list">Linked_list</link>&lt; NodeType &gt;::getPrimeiro ( )<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>Retorna o primeiro nó </para>
</section>
<anchor xml:id="_classLinked__list_1ad1c20c58f90e54eee52279878ba420b5"/><section>
    <title>getTam()</title>
<indexterm><primary>getTam</primary><secondary>Linked_list&lt; NodeType &gt;</secondary></indexterm>
<indexterm><primary>Linked_list&lt; NodeType &gt;</primary><secondary>getTam</secondary></indexterm>
<computeroutput>template&lt;typename NodeType&gt; </computeroutput><para><computeroutput>int <link linkend="_classLinked__list">Linked_list</link>&lt; NodeType &gt;::getTam ( )<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>Retorna o tamanho da lista </para>
</section>
<anchor xml:id="_classLinked__list_1a67853c0cb82aad5bfba932bae6eb8402"/><section>
    <title>getUltimo()</title>
<indexterm><primary>getUltimo</primary><secondary>Linked_list&lt; NodeType &gt;</secondary></indexterm>
<indexterm><primary>Linked_list&lt; NodeType &gt;</primary><secondary>getUltimo</secondary></indexterm>
<computeroutput>template&lt;typename NodeType&gt; </computeroutput><para><computeroutput>NodeType * <link linkend="_classLinked__list">Linked_list</link>&lt; NodeType &gt;::getUltimo ( )<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>Retorna o ultimo nó </para>
</section>
<anchor xml:id="_classLinked__list_1a32d114d58039a83d38209dbfe86abcc1"/><section>
    <title>imprimeLista()</title>
<indexterm><primary>imprimeLista</primary><secondary>Linked_list&lt; NodeType &gt;</secondary></indexterm>
<indexterm><primary>Linked_list&lt; NodeType &gt;</primary><secondary>imprimeLista</secondary></indexterm>
<computeroutput>template&lt;typename NodeType&gt; </computeroutput><para><computeroutput>void <link linkend="_classLinked__list">Linked_list</link>&lt; NodeType &gt;::imprimeLista ( )<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>Imprime a Lista encadeada </para>
</section>
<anchor xml:id="_classLinked__list_1ad68dcfd7efeba688a38415bef82bb184"/><section>
    <title>insereFinal()</title>
<indexterm><primary>insereFinal</primary><secondary>Linked_list&lt; NodeType &gt;</secondary></indexterm>
<indexterm><primary>Linked_list&lt; NodeType &gt;</primary><secondary>insereFinal</secondary></indexterm>
<computeroutput>template&lt;typename NodeType&gt; </computeroutput><para><computeroutput>void <link linkend="_classLinked__list">Linked_list</link>&lt; NodeType &gt;::insereFinal (int val)<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>Insere nó no final da lista com peso passado como parâmetro </para>
</section>
<anchor xml:id="_classLinked__list_1a17e3103bf8064e6622004dec62b8ea0a"/><section>
    <title>limpaNodes()</title>
<indexterm><primary>limpaNodes</primary><secondary>Linked_list&lt; NodeType &gt;</secondary></indexterm>
<indexterm><primary>Linked_list&lt; NodeType &gt;</primary><secondary>limpaNodes</secondary></indexterm>
<computeroutput>template&lt;typename NodeType&gt; </computeroutput><para><computeroutput>void <link linkend="_classLinked__list">Linked_list</link>&lt; NodeType &gt;::limpaNodes ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para>
<para>Função auxiliar que deleta todos os nós </para>
</section>
<anchor xml:id="_classLinked__list_1a42b8ab1db5a517935a7001af37fe130f"/><section>
    <title>removeNode()</title>
<indexterm><primary>removeNode</primary><secondary>Linked_list&lt; NodeType &gt;</secondary></indexterm>
<indexterm><primary>Linked_list&lt; NodeType &gt;</primary><secondary>removeNode</secondary></indexterm>
<computeroutput>template&lt;typename NodeType&gt; </computeroutput><para><computeroutput>void <link linkend="_classLinked__list">Linked_list</link>&lt; NodeType &gt;::removeNode (int val)<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>Remove especificamente arestas cujo valor correspondente seja o val e não o ID </para>
</section>
<para>
A documentação para esta classe foi gerada a partir do seguinte ficheiro:</para>
Linked_list.hpp</section>
</section>
